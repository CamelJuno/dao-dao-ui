/* tslint:disable */
import { CreateMsg, Uint128 } from './shared-types'

/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ExecuteMsg =
  | {
      create: CreateMsg
    }
  | {
      top_up: {
        id: string
        [k: string]: unknown
      }
    }
  | {
      approve: {
        /**
         * id is a human-readable name for the escrow from create
         */
        id: string
        [k: string]: unknown
      }
    }
  | {
      refund: {
        /**
         * id is a human-readable name for the escrow from create
         */
        id: string
        [k: string]: unknown
      }
    }
  | {
      receive: Cw20ReceiveMsg
    }
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string

/**
 * Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg
 */
export interface Cw20ReceiveMsg {
  amount: Uint128
  msg: Binary
  sender: string
  [k: string]: unknown
}
